//Од стандарден влез се чита цел број N. Потоа се вчитуваат N низи од цели броеви (со максимална должина од 100 елементи)
//при што за секоја прво се внесува должината на низата, а потоа сите елементи во низата.
//Да се напише програма која за секоја низа ќе го испечати ПРОЦЕНТОТ на огледални еднакви броеви во низата.
//Огледални броеви во низа се првиот и последниот, вториот и претпоследниот итн.
//Доколку низата има непарен број на елементи, средниот елемент е и огледален и еднаков.

//input                 output         (2,5,5 се огледални и еднакви за првата)
//3                     60.00%         (1,1,3,3 за втората и 8,8,4,4 за третата)
//5 7 2 5 2 8           66.67%
//6 1 2 3 3 1 1         50.00%
//8 8 4 8 3 2 1 4 8

#include <iostream>
#include <iomanip>

using namespace std;

float procent(int a[], int n) {
    int br = 0;
    for (int i = 0, m = n - 1; i < n / 2; i++, m--) {
        if (a[i] == a[m]) {
            br += 2;
        }
    }
    if (n % 2 != 0) {
        br += 1;
    }
    float procent = (float) br * 100 / n;
    return procent;
}

void vnesiNiza() {
    int N,a[100];
    cin >> N;
    for (int i = 0; i < N; i++) {
        cin >> a[i];
    }
    float pr = procent(a, N);
    cout<<(fixed)<<setprecision(2)<<pr<<"%"<<endl;
}

int main() {
    int N, a[100];
    cin >> N;
    for (int i = 0; i < N; i++) {
        vnesiNiza();
    }


    return 0;
}
